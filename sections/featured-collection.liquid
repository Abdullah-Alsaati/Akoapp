{{ 'featured-collection.css' | asset_url | stylesheet_tag }}

<section class="featured-collection-wrapper">

  <div class="featured-collection">
    <div class="collection-image">
      <a href="{{ section.settings.featured_collection.url }}" class="collection-name-link">
        <p class="collection-name">{{ section.settings.featured_collection.title }}</p>
      </a>
    </div>

    <!-- Swiper Container -->
    <div class="swiper featured-collection-swiper">
      <div class="swiper-wrapper">
        {% for product in collections[section.settings.featured_collection].products limit: 15 %}
          <div class="swiper-slide">
            <div class="product-card">
              <div class="product-image">
                <a href="{{ product.url }}">
                  <img width="100%" height="100%" src="{{ product.featured_image | image_url }}" alt="" loading="lazy">
                </a>
              </div>
              <div class="product-information">
                <a href="{{ product.url }}">
                  <h2 class="short_title">{{ product.metafields.custom.product_short_title }}</h2>
                  <p class="product-title">{{ product.title | truncatewords: 7 }}</p>
                </a>
                <div class="product-prices">
                  {% if cart.currency.iso_code == "SAR" %}
                    <div class="saudi-price-holder">
                      <p class="product-price">{{ product.price | money_without_currency }}</p>
                      <img width="auto" height="20px" src="{{ 'sar.svg' | asset_url }}" alt="">
                    </div>
                  {% else %}
                    <p class="product-price">{{ product.price | money_with_currency }}</p>
                  {% endif %}

                  {% if product.compare_at_price %}
                    <p class="product-compare-to-price" style="text-decoration: line-through;">
                      {{ product.compare_at_price | money }}
                    </p>
                  {% endif %}
                </div>
              </div>
              <div class="buttons">
                <form class="buttons" method="post" action="/cart/add">
                  <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                  <input type="hidden" name="quantity" value="1">
                  <button type="submit" class="buy-now-button">أشتر الأن</button>
                  <button type="button" class="add-to-cart-button">
                    <span class="spinner" style="display: none;"></span>
                    <img width="auto" height="100%" src="{{ 'cart.svg' | asset_url }}" alt="">
                  </button>
                </form>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>

      <!-- Navigation Buttons -->
      <div class="swiper-button-prev"></div>
      <div class="swiper-button-next"></div>
    </div>
  </div>
</section>


<script>
document.addEventListener("DOMContentLoaded", function () {
  // Swiper
  new Swiper(".featured-collection-swiper", {
    loop: true,
    slidesPerView: 1.2,
    spaceBetween: 15,
    slidesPerGroup: 3,
    breakpoints: {
      10: { slidesPerView: 2, slidesPerGroup: 1 },
      450: { slidesPerView: 2, slidesPerGroup: 1 },
      768: { slidesPerView: 3, slidesPerGroup: 3 },
      1024: { slidesPerView: 5, slidesPerGroup: 3 }
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev"
    },
    grabCursor: true,
    lazyPreloadPrevNext: 2
  });

  // Buy Now logic
  document.querySelectorAll(".buy-now-button").forEach(button => {
    button.addEventListener("click", function (event) {
      event.preventDefault();
      const form = event.target.closest("form");
      fetch("/cart/add", {
        method: "POST",
        body: new FormData(form)
      }).then(() => {
        window.location.href = "/checkout";
      });
    });
  });

  // Add to cart logic
  document.querySelectorAll(".add-to-cart-button").forEach(button => {
  button.addEventListener("click", function (event) {
    const form = event.target.closest("form");

    // Add loading class
    button.classList.add("loading");

    // Optimistically assume it's first item (or preload cart as shown earlier)
    let cartWasEmpty = false;

    fetch("/cart.js")
      .then(response => response.json())
      .then(cart => {
        cartWasEmpty = cart.items.length === 0;

        return fetch("/cart/add", {
          method: "POST",
          body: new FormData(form)
        });
      })
      .then(() => fetch("/cart.js"))
      .then(response => response.json())
      .then(cart => {
        document.dispatchEvent(new CustomEvent("cart:updated", { detail: cart }));

        if (cartWasEmpty && window.floatingCart?.openCart) {
          window.floatingCart.openCart();
        }
      })
      .catch(error => {
        console.error("Error adding to cart:", error);
      })
      .finally(() => {
        button.classList.remove("loading");
      });
  });
});


});



</script>

{% schema %}
{
  "name": "featured-collection",
  "settings": [
    {
      "type": "collection",
      "id": "featured_collection",
      "label": "أختر مجموعة منتجات لعرضها"
    }
  ],
  "presets": [
    {
      "name": "featured-collection"
    }
  ]
}
{% endschema %}
